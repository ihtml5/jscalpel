{"version":3,"file":"jscalpel.dev.js","sources":["../index.js"],"sourcesContent":["\r\nclass JscalpelCore {\r\n    constructor({\r\n        target,\r\n        path,\r\n        returnedValue,\r\n        error\r\n    }) {\r\n        this._target = target;\r\n        this._path = path;\r\n        this._error = error;\r\n        this._returnedValue = returnedValue;\r\n    }\r\n\r\n    _getValueByPath (path) {\r\n        let result = null;\r\n        let epTarget = this._target;\r\n        let keyPaths = this._fallbackpath(path).split('.')\r\n        for (let i = 0, len = keyPaths.length; i < len; i++) {\r\n          result = result ? result[keyPaths[i]] : epTarget[keyPaths[i]];\r\n          if (typeof result === undefined) {\r\n              return result;\r\n          }\r\n        }\r\n        return result\r\n    }\r\n    _getValue (path) {\r\n        let result = null;\r\n        let epTarget = this._target;\r\n        let pResult = [];\r\n        let self = this;\r\n        if (typeof path === 'string' && path.length > 0) {\r\n            return this._getValueByPath(path);\r\n        } else if (Object.prototype.toString.call(path) === '[object Array]') {\r\n            path.forEach((singlePath, idx) => {\r\n                if (typeof singlePath === 'string') {\r\n                    result = self._getValueByPath(singlePath);\r\n                    pResult.push(result);\r\n                }\r\n            })\r\n            if (pResult.length === 0) {\r\n                return null;\r\n            }\r\n            return pResult;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    get (path) {\r\n        return path ? this._getValueByPath(path) : this._returnedValue;\r\n    }\r\n    _fallbackpath (path) {\r\n        if (typeof path !== 'string') {\r\n            return '';\r\n        }\r\n        return path;\r\n    }\r\n    _setOrDel (path, value) {\r\n        let current = {};\r\n        let fallbacPath = this._fallbackpath(path);\r\n        if (fallbacPath === '') {\r\n            if (typeof this._error === 'function') {\r\n                this._error(this._target, path);\r\n            }\r\n            return;\r\n        }\r\n        let pathArr = fallbacPath.split('.');\r\n        let pathLens = pathArr.length;\r\n        let i = 0;\r\n        if (pathLens === 1) {\r\n            this._target[pathArr[i]] = value;\r\n            return;\r\n        }\r\n        while (i < pathLens-1) {\r\n            this._target[pathArr[i]][pathArr[i+1]] = (i === pathLens-2 ? value : {});\r\n            i++;\r\n        }\r\n    }\r\n    set (path, value) {\r\n        this._setOrDel(path, value);\r\n    }\r\n\r\n    has (path) {\r\n       let returnedValue = this._getValueByPath(path);\r\n       if (!returnedValue) {\r\n           return false;\r\n       }\r\n       return true;\r\n    }\r\n\r\n    remove(path) {\r\n        this._setOrDel(path, void 0);\r\n    }\r\n}\r\n\r\n\r\nconst jscalpel = ({ target, path, prefix, callback, success, deep, plugins, error}, defaultOpts) => {\r\n    const nativeToString = Object.prototype.toString;\r\n    const compatCb = success || callback;\r\n    let enablePrefix = prefix ? true : false;\r\n    const deepCopy = (obj) => {\r\n        const returnObj = {};\r\n        let tempArr = [];\r\n        if (nativeToString.call(obj) === '[object Object]') {\r\n            Object.path(obj).forEach((path, index) => {\r\n                if (Array.isArray(obj[path])) {\r\n                    obj[path].forEach((value, index) => {\r\n                        tempArr.push(value);\r\n                    });\r\n                    returnObj[path] = tempArr;\r\n                    tempArr = [];\r\n                } else if (nativeToString.call(obj[path] === '[object Object]')) {\r\n                    returnObj[path] = deepCopy(obj[path]);\r\n                }\r\n            });\r\n            return returnObj;\r\n        } else {\r\n            return obj;\r\n        }\r\n    }\r\n    const autoCompletepath = (path) => {\r\n        return (`${prefix && enablePrefix ? `${prefix}.${path}` : `${path}`}`);\r\n    }\r\n    const getValueByPath = function ({path, target, plugins, index}) {\r\n        // 优化: 如果检测到undefined直接跳出遍历\r\n        let result = target\r\n        let pathPaths = (autoCompletepath(path)).split('.')\r\n        for (let i = 0, len = pathPaths.length; i < len; i++) {\r\n          result = result[pathPaths[i]]\r\n          if (result === undefined) {\r\n              return result;\r\n          }\r\n        }\r\n        return result\r\n      }\r\n    \r\n      const executePlugins = ({ plugins, name, value }) => {\r\n          let willPluginInfo = {\r\n              value,\r\n              name\r\n          }\r\n          if (plugins && Array.isArray(plugins) && plugins.length) {\r\n            plugins.forEach((plugin, index) => {\r\n                plugin(willPluginInfo);\r\n            });\r\n          }\r\n\r\n      } \r\n    const getParameterNames = (fn) => {\r\n        const COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;\r\n        const DEFAULT_PARAMS = /=[^,]+/mg;\r\n        const FAT_ARROWS = /=>.*$/mg;\r\n        const code = fn.toString()\r\n            .replace(COMMENTS, '')\r\n            .replace(FAT_ARROWS, '')\r\n            .replace(DEFAULT_PARAMS, '');\r\n\r\n        const result = code.slice(code.indexOf('(') + 1, code.indexOf(')'))\r\n            .match(/([^\\s,]+)/g);\r\n\r\n        return result === null\r\n            ? []\r\n            : result;\r\n    }\r\n\r\n    const getReturnedVal = (defaultValue, result, pResult) => {\r\n        if (typeof value !== 'undefined') {\r\n            return value;\r\n        } else {\r\n            return result || pResult;\r\n        }\r\n    }\r\n    //  try transform anything to object\r\n    const transformAnyToObj = (target) => {\r\n        let epTarget  = null;\r\n        try {\r\n            epTarget = typeof target === 'string' ? JSON.parse(target) : target;\r\n            if (deep) {\r\n                epTarget = deepCopy(epTarget);\r\n            }\r\n    \r\n            if (nativeToString.call(epTarget) !== '[object Object]' && !Array.isArray(epTarget)) {\r\n                typeof error === 'function' && error(epTarget);\r\n                return;\r\n            }\r\n        } catch (err) {\r\n            typeof error === 'function' && error(epTarget, err);\r\n            return;\r\n        }\r\n        return epTarget;\r\n    }\r\n\r\n    let defaultValue = null;\r\n    let result = null;\r\n    let willPluginInfo = {};\r\n    let epTarget = transformAnyToObj(target);\r\n    let pResult = null;\r\n    let cbParams = compatCb ? getParameterNames(compatCb) : [];\r\n    path = typeof path === 'function' ? path(prefix) : path;\r\n\r\n\r\n    if (typeof path === 'string' && path.length > 0) {\r\n        result = getValueByPath({path, target});\r\n        executePlugins({plugins, name: cbParams[0], value: result});\r\n        if (compatCb && typeof compatCb === 'function') {;\r\n            defaultValue = compatCb.call(null, result, epTarget, path, defaultOpts);\r\n        } else {\r\n            defaultValue = compatCb;\r\n        }\r\n    } else if (nativeToString.call(path) === '[object Array]') {\r\n        pResult = [];\r\n        path.forEach((singlePath, idx) => {\r\n            if (typeof singlePath === 'string') {\r\n                result = getValueByPath({path: singlePath, target});\r\n                executePlugins({plugins, value: result, name: cbParams[idx]});\r\n                pResult.push(result);\r\n            }\r\n            result = null;\r\n        })\r\n        pResult.push(epTarget, path, defaultOpts);\r\n        if (compatCb && typeof compatCb === 'function') {\r\n            defaultValue = compatCb.apply(null, pResult);\r\n        } else {\r\n            defaultValue = compatCb;\r\n        }\r\n    }\r\n    \r\n    return new JscalpelCore({\r\n        target: epTarget,\r\n        path,\r\n        returnedValue: getReturnedVal(defaultValue, result, pResult.slice(0,-3)),\r\n        error\r\n    })\r\n}\r\n\r\nexport default jscalpel;"],"names":["JscalpelCore","target","path","returnedValue","error","_target","_path","_error","_returnedValue","result","epTarget","keyPaths","_fallbackpath","split","i","len","length","undefined","pResult","self","_getValueByPath","Object","prototype","toString","call","forEach","singlePath","idx","push","value","fallbacPath","pathArr","pathLens","_setOrDel","jscalpel","defaultOpts","prefix","callback","success","deep","plugins","nativeToString","compatCb","enablePrefix","deepCopy","obj","returnObj","tempArr","index","Array","isArray","autoCompletepath","getValueByPath","pathPaths","executePlugins","name","willPluginInfo","plugin","getParameterNames","fn","COMMENTS","DEFAULT_PARAMS","FAT_ARROWS","code","replace","slice","indexOf","match","getReturnedVal","defaultValue","transformAnyToObj","JSON","parse","err","cbParams","apply"],"mappings":"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"}