{"version":3,"file":"jscalpel.min.js","sources":["../index.js"],"sourcesContent":["const jscalpel = ({ target, keys, prefix, callback, deep, dynamicKeys, plugins}, defaultOpts) => {\r\n    const nativeToString = Object.prototype.toString;\r\n    let enablePrefix = prefix ? true : false;\r\n    const deepCopy = (obj) => {\r\n        const returnObj = {};\r\n        let tempArr = [];\r\n        if (nativeToString.call(obj) === '[object Object]') {\r\n            Object.keys(obj).forEach((key, index) => {\r\n                if (Array.isArray(obj[key])) {\r\n                    obj[key].forEach((value, index) => {\r\n                        tempArr.push(value);\r\n                    });\r\n                    returnObj[key] = tempArr;\r\n                    tempArr = [];\r\n                } else if (nativeToString.call(obj[key] === '[object Object]')) {\r\n                    returnObj[key] = deepCopy(obj[key]);\r\n                }\r\n            });\r\n            return returnObj;\r\n        } else {\r\n            return obj;\r\n        }\r\n    }\r\n    const autoCompleteKey = (key) => {\r\n        return (`${prefix && enablePrefix ? `${prefix}.${key}` : `${key}`}`);\r\n    }\r\n    const getParameterNames = (fn) => {\r\n        const COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;\r\n        const DEFAULT_PARAMS = /=[^,]+/mg;\r\n        const FAT_ARROWS = /=>.*$/mg;\r\n        const code = fn.toString()\r\n            .replace(COMMENTS, '')\r\n            .replace(FAT_ARROWS, '')\r\n            .replace(DEFAULT_PARAMS, '');\r\n\r\n        const result = code.slice(code.indexOf('(') + 1, code.indexOf(')'))\r\n            .match(/([^\\s,]+)/g);\r\n\r\n        return result === null\r\n            ? []\r\n            : result;\r\n    }\r\n    let defaultValue = null;\r\n    let result = null;\r\n    let epTarget = null;\r\n    const cbParams = callback ? getParameterNames(callback) : [];\r\n    console.log('cbParams', cbParams);\r\n    let willPluginInfo = {};\r\n    if (typeof dynamicKeys === 'function') {\r\n        keys = dynamicKeys(keys) || keys;\r\n        enablePrefix = false;\r\n    }\r\n    try {\r\n        epTarget = typeof target === 'string' ? JSON.parse(target) : target;\r\n        if (deep) {\r\n            epTarget = deepCopy(epTarget);\r\n        }\r\n\r\n        if (nativeToString.call(epTarget) !== '[object Object]' && !Array.isArray(epTarget)) {\r\n            console.error('传入的target不是有效的json或者object');\r\n            return;\r\n        }\r\n    } catch (err) {\r\n        console.error('传入的target不是有效的json或者object');\r\n        return;\r\n    }\r\n    if (typeof keys === 'string' && keys.length > 0) {\r\n\r\n        `${autoCompleteKey(keys)}`.split('.').forEach((value, index) => {\r\n            result= (result ? result[value] : epTarget[value])\r\n            willPluginInfo = {\r\n                value: result,\r\n                name: cbParams[index]\r\n            };\r\n            if (plugins && Array.isArray(plugins)) {\r\n                plugins.forEach((plugin, index) => {\r\n                    result = plugin(willPluginInfo);\r\n                })\r\n            }\r\n        })\r\n        if (callback && typeof callback === 'function') {;\r\n            defaultValue = callback.call(null, result, epTarget, keys, defaultOpts);\r\n        } else {\r\n            defaultValue = callback;\r\n        }\r\n        if (typeof defaultValue === 'undefined') {\r\n            return result || defaultOpts;\r\n        }\r\n        return defaultValue;\r\n    } else if (nativeToString.call(keys) === '[object Array]') {\r\n        const pResult = [];\r\n        keys.forEach((singlePath, idx) => {\r\n            result = null;\r\n            if (typeof singlePath === 'string') {\r\n                `${autoCompleteKey(singlePath)}`.split('.').forEach((value, index) => {\r\n                    result= (result ? result[value] : epTarget[value])\r\n                });\r\n                willPluginInfo = {\r\n                    value: result,\r\n                    name: cbParams[idx]\r\n                }\r\n                if (plugins && Array.isArray(plugins)) {\r\n                    plugins.forEach((plugin, index) => {\r\n                        result = plugin(willPluginInfo);\r\n                    })\r\n                }\r\n                pResult.push(result);\r\n            }\r\n        })\r\n        pResult.push(epTarget,keys, defaultOpts);\r\n        if (callback && typeof callback === 'function') {\r\n            defaultValue = callback.apply(null, pResult);\r\n        } else {\r\n            defaultValue = callback;\r\n        }\r\n        if (typeof defaultValue === 'undefined') {\r\n            return pResult || defaultOpts;\r\n        }\r\n        return defaultValue;\r\n    }\r\n}\r\n\r\nexport default jscalpel;"],"names":["defaultOpts","target","keys","prefix","callback","deep","dynamicKeys","plugins","nativeToString","Object","prototype","toString","enablePrefix","autoCompleteKey","key","defaultValue","result","epTarget","cbParams","fn","COMMENTS","DEFAULT_PARAMS","FAT_ARROWS","code","replace","slice","indexOf","match","getParameterNames","log","willPluginInfo","JSON","parse","deepCopy","obj","returnObj","tempArr","call","forEach","index","Array","isArray","value","push","error","err","length","split","plugin","pResult","singlePath","idx","apply"],"mappings":"2LAAiB,WAAgEA,OAA7DC,IAAAA,OAAQC,IAAAA,KAAMC,IAAAA,OAAQC,IAAAA,SAAUC,IAAAA,KAAMC,IAAAA,YAAaC,IAAAA,QAC7DC,EAAiBC,OAAOC,UAAUC,SACpCC,IAAeT,EAqBbU,EAAkB,SAACC,UACVX,GAAUS,EAAkBT,MAAUW,KAAWA,GAkB5DC,EAAe,KACfC,EAAS,KACTC,EAAW,KACTC,EAAWd,EAnBS,SAACe,OACjBC,EAAW,mCACXC,EAAiB,WACjBC,EAAa,UACbC,EAeoCnB,EAf1BO,WACXa,QAAQJ,EAAU,IAClBI,QAAQF,EAAY,IACpBE,QAAQH,EAAgB,IAEvBL,EAASO,EAAKE,MAAMF,EAAKG,QAAQ,KAAO,EAAGH,EAAKG,QAAQ,MACzDC,MAAM,qBAEO,OAAXX,KAEDA,EAKkBY,cACpBC,IAAI,WAAYX,OACpBY,KACuB,mBAAhBxB,MACAA,EAAYJ,IAASA,KACb,YAGc,iBAAXD,EAAsB8B,KAAKC,MAAM/B,GAAUA,EACzDI,MAnDS,SAAX4B,EAAYC,OACRC,KACFC,WAC6B,oBAA7B5B,EAAe6B,KAAKH,WACbhC,KAAKgC,GAAKI,QAAQ,SAACxB,EAAKyB,GACvBC,MAAMC,QAAQP,EAAIpB,OACdA,GAAKwB,QAAQ,SAACI,EAAOH,KACbI,KAAKD,OAEP5B,GAAOsB,QAEV5B,EAAe6B,KAAkB,oBAAbH,EAAIpB,QACrBA,GAAOmB,EAASC,EAAIpB,OAG/BqB,GAEAD,EAmCID,CAAShB,IAGc,oBAAlCT,EAAe6B,KAAKpB,KAAoCuB,MAAMC,QAAQxB,uBAC9D2B,MAAM,8BAGpB,MAAOC,uBACGD,MAAM,iCAGE,iBAAT1C,GAAqBA,EAAK4C,OAAS,YAEvCjC,EAAgBX,IAAQ6C,MAAM,KAAKT,QAAQ,SAACI,EAAOH,KACzCvB,EAASA,EAAO0B,GAASzB,EAASyB,YAEhC1B,OACDE,EAASqB,IAEfhC,GAAWiC,MAAMC,QAAQlC,MACjB+B,QAAQ,SAACU,EAAQT,KACZS,EAAOlB,YASA,OALxB1B,GAAgC,mBAAbA,EACJA,EAASiC,KAAK,KAAMrB,EAAQC,EAAUf,EAAMF,GAE5CI,GAGRY,GAAUhB,EAEde,EACJ,GAAkC,mBAA9BP,EAAe6B,KAAKnC,GAA4B,KACjD+C,cACDX,QAAQ,SAACY,EAAYC,KACb,KACiB,iBAAfD,QACJrC,EAAgBqC,IAAcH,MAAM,KAAKT,QAAQ,SAACI,EAAOH,KAC/CvB,EAASA,EAAO0B,GAASzB,EAASyB,cAGpC1B,OACDE,EAASiC,IAEf5C,GAAWiC,MAAMC,QAAQlC,MACjB+B,QAAQ,SAACU,EAAQT,KACZS,EAAOlB,OAGhBa,KAAK3B,QAGb2B,KAAK1B,EAASf,EAAMF,QAMA,OALxBI,GAAgC,mBAAbA,EACJA,EAASgD,MAAM,KAAMH,GAErB7C,GAGR6C,GAAWjD,EAEfe"}