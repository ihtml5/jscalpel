{"version":3,"file":"jscalpel.min.js","sources":["../index.js"],"sourcesContent":["const jscalpel = ({ target, keys, prefix, callback, deep, dynamicKeys, plugins}, defaultOpts) => {\r\n    const nativeToString = Object.prototype.toString;\r\n    let enablePrefix = prefix ? true : false;\r\n    const deepCopy = (obj) => {\r\n        const returnObj = {};\r\n        let tempArr = [];\r\n        if (nativeToString.call(obj) === '[object Object]') {\r\n            Object.keys(obj).forEach((key, index) => {\r\n                if (Array.isArray(obj[key])) {\r\n                    obj[key].forEach((value, index) => {\r\n                        tempArr.push(value);\r\n                    });\r\n                    returnObj[key] = tempArr;\r\n                    tempArr = [];\r\n                } else if (nativeToString.call(obj[key] === '[object Object]')) {\r\n                    returnObj[key] = deepCopy(obj[key]);\r\n                }\r\n            });\r\n            return returnObj;\r\n        } else {\r\n            return obj;\r\n        }\r\n    }\r\n    const autoCompleteKey = (key) => {\r\n        return (`${prefix && enablePrefix ? `${prefix}.${key}` : `${key}`}`);\r\n    }\r\n    const getParameterNames = (fn) => {\r\n        const COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*\\*\\/))/mg;\r\n        const DEFAULT_PARAMS = /=[^,\\)]+/mg;\r\n        const FAT_ARROWS = /=>[\\s\\S]*/mg;\r\n        const code = fn.toString()\r\n            .replace(COMMENTS, '')\r\n            .replace(FAT_ARROWS, '')\r\n            .replace(DEFAULT_PARAMS, '');\r\n\r\n        const result = code.slice(code.indexOf('(') + 1, code.indexOf(')'))\r\n            .match(/([^\\s,]+)/g);\r\n\r\n        return result === null\r\n            ? []\r\n            : result;\r\n    }\r\n\r\n    var getKeyPathValue = function (key, target, plugins) {\r\n      // 优化: 如果检测到undefined直接跳出遍历\r\n      let result = target\r\n      let keysPaths = (autoCompleteKey(key)).split('.')\r\n      console.log('keysPaths', keysPaths)\r\n      for (let i = 0, len = keysPaths.length; i < len; i++) {\r\n        result = result[keysPaths[i]]\r\n        console.log('进来一次', result)\r\n        if (result === undefined) break\r\n      }\r\n      // fixed: 获取到最终path信息，再进行插件操作\r\n      let willPluginInfo = {\r\n        value: result,\r\n        name: key\r\n      };\r\n      console.log('willPluginInfo1: ', willPluginInfo)\r\n      // 增加校验插件个数，另外这里不判断willPluginInfo.value，是因为即使value为undefined，也可能需要插件处理\r\n      if (plugins && Array.isArray(plugins) && plugins.length) {\r\n        plugins.forEach(function (plugin, index) {\r\n          result = plugin(willPluginInfo);\r\n        });\r\n      }\r\n      return result\r\n    }\r\n\r\n    // 修复dynamicKeys与prefix表现不一致的问题\r\n    var originalKeys = keys\r\n    let epTarget = null;\r\n    const cbParams = callback ? getParameterNames(callback) : [];\r\n    console.log('cbParams', cbParams);\r\n    if (typeof dynamicKeys === 'function') {\r\n        keys = dynamicKeys(keys) || keys;\r\n        // 有dynamicKeys时禁用prefix\r\n        enablePrefix = false;\r\n    }\r\n\r\n    try {\r\n      epTarget = typeof target === 'string' ? JSON.parse(target) : target;\r\n      if (deep) {\r\n        epTarget = deepCopy(epTarget);\r\n      }\r\n\r\n      if (nativeToString.call(epTarget) !== '[object Object]' && !Array.isArray(epTarget)) {\r\n        throw new Error();\r\n        return;\r\n      }\r\n    } catch (err) {\r\n      console.error('传入的target不是有效的JSON或target不是Object/Array类型');\r\n      return;\r\n    }\r\n    if (typeof keys === 'string' && keys.length > 0) {\r\n      let result = getKeyPathValue(keys, epTarget, plugins)\r\n      result = [result, epTarget, originalKeys, defaultOpts]\r\n\r\n      if (callback && typeof callback === 'function') {\r\n        return callback.apply(null, result) || result || defaultOpts;\r\n      } else {\r\n        return callback || result || defaultOpts\r\n      }\r\n    } else if (nativeToString.call(keys) === '[object Array]') {\r\n        const pResult = [];\r\n        keys.forEach((singlePath, idx) => {\r\n            if (typeof singlePath === 'string') {\r\n              let result = getKeyPathValue(singlePath, epTarget, plugins)\r\n              pResult.push(result);\r\n            }\r\n        })\r\n        pResult.push(epTarget, originalKeys, defaultOpts);\r\n        \r\n        let defaultValue = null\r\n        if (callback && typeof callback === 'function') {\r\n          defaultValue = callback.apply(null, pResult);\r\n        } else {\r\n          defaultValue = callback;\r\n        }\r\n        return defaultValue || pResult || defaultOpts;\r\n    }\r\n}\r\n\r\nexport default jscalpel;"],"names":["defaultOpts","target","keys","prefix","callback","deep","dynamicKeys","plugins","nativeToString","Object","prototype","toString","enablePrefix","autoCompleteKey","key","getKeyPathValue","result","keysPaths","split","log","i","len","length","undefined","willPluginInfo","Array","isArray","forEach","plugin","index","originalKeys","epTarget","cbParams","fn","COMMENTS","DEFAULT_PARAMS","FAT_ARROWS","code","replace","slice","indexOf","match","getParameterNames","JSON","parse","deepCopy","obj","returnObj","tempArr","call","value","push","Error","err","error","apply","pResult","singlePath","idx"],"mappings":"2LAAiB,WAAgEA,OAA7DC,IAAAA,OAAQC,IAAAA,KAAMC,IAAAA,OAAQC,IAAAA,SAAUC,IAAAA,KAAMC,IAAAA,YAAaC,IAAAA,QAC7DC,EAAiBC,OAAOC,UAAUC,SACpCC,IAAeT,EAqBbU,EAAkB,SAACC,UACVX,GAAUS,EAAkBT,MAAUW,KAAWA,GAmB5DC,EAAkB,SAAUD,EAAKb,EAAQM,OAEvCS,EAASf,EACTgB,EAAaJ,EAAgBC,GAAMI,MAAM,aACrCC,IAAI,YAAaF,OACpB,IAAIG,EAAI,EAAGC,EAAMJ,EAAUK,OAAQF,EAAIC,MACjCL,EAAOC,EAAUG,YAClBD,IAAI,OAAQH,QACLO,IAAXP,GAH2CI,SAM7CI,SACKR,OACDF,kBAEAK,IAAI,oBAAqBK,GAE7BjB,GAAWkB,MAAMC,QAAQnB,IAAYA,EAAQe,UACvCK,QAAQ,SAAUC,EAAQC,KACvBD,EAAOJ,KAGbR,GAILc,EAAe5B,EACf6B,EAAW,KACTC,EAAW5B,EA7CS,SAAC6B,OACjBC,EAAW,kCACXC,EAAiB,aACjBC,EAAa,cACbC,EAyCoCjC,EAzC1BO,WACX2B,QAAQJ,EAAU,IAClBI,QAAQF,EAAY,IACpBE,QAAQH,EAAgB,IAEvBnB,EAASqB,EAAKE,MAAMF,EAAKG,QAAQ,KAAO,EAAGH,EAAKG,QAAQ,MACzDC,MAAM,qBAEO,OAAXzB,KAEDA,EA+BkB0B,cACpBvB,IAAI,WAAYa,GACG,mBAAhB1B,MACAA,EAAYJ,IAASA,KAEb,YAIY,iBAAXD,EAAsB0C,KAAKC,MAAM3C,GAAUA,EACzDI,MA9EW,SAAXwC,EAAYC,OACRC,KACFC,WAC6B,oBAA7BxC,EAAeyC,KAAKH,WACb5C,KAAK4C,GAAKnB,QAAQ,SAACb,EAAKe,GACvBJ,MAAMC,QAAQoB,EAAIhC,OACdA,GAAKa,QAAQ,SAACuB,EAAOrB,KACbsB,KAAKD,OAEPpC,GAAOkC,QAEVxC,EAAeyC,KAAkB,oBAAbH,EAAIhC,QACrBA,GAAO+B,EAASC,EAAIhC,OAG/BiC,GAEAD,EA8DAD,CAASd,IAGgB,oBAAlCvB,EAAeyC,KAAKlB,KAAoCN,MAAMC,QAAQK,SAClE,IAAIqB,MAGZ,MAAOC,uBACCC,MAAM,gDAGI,iBAATpD,GAAqBA,EAAKoB,OAAS,EAAG,KAC3CN,EAASD,EAAgBb,EAAM6B,EAAUxB,aACnCS,EAAQe,EAAUD,EAAc9B,GAEtCI,GAAgC,mBAAbA,EACdA,EAASmD,MAAM,KAAMvC,IAAWA,GAAUhB,EAE1CI,GAAYY,GAAUhB,EAE1B,GAAkC,mBAA9BQ,EAAeyC,KAAK/C,GAA4B,KACjDsD,cACD7B,QAAQ,SAAC8B,EAAYC,MACI,iBAAfD,EAAyB,KAC9BzC,EAASD,EAAgB0C,EAAY1B,EAAUxB,KAC3C4C,KAAKnC,QAGXmC,KAAKpB,EAAUD,EAAc9B,IAGjCI,GAAgC,mBAAbA,EACNA,EAASmD,MAAM,KAAMC,GAErBpD,IAEMoD,GAAWxD"}
